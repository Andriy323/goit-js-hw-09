{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,yBAC9BE,OAAQH,SAASC,cAAc,0BAC/BG,KAAMJ,SAASC,cAAc,yBAyB/B,SAASI,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEF,E,MAAUJ,IAEpBO,EAAO,C,SAAEH,E,MAAUJ,GAAQ,GAE5BA,EAAM,G,CAhCbJ,EAAKC,KAAKc,iBAAiB,UAE3B,SAAyBC,GACvBA,EAAEC,iBACF,IAAIC,EAAaC,OAAOnB,EAAKI,MAAMgB,OACnC,MAAMC,EAAYF,OAAOnB,EAAKM,KAAKc,OAEnC,IAAK,IAAIE,EAAI,EAAGA,GAAKH,OAAOnB,EAAKK,OAAOe,OAAQE,IAC9Cf,EAAce,EAAGJ,GACdK,MAAK,EAACf,SAAEA,EAAQJ,MAAEA,MACjBN,EAAA0B,OAAOC,QAAQ,uBAAqBjB,QAAiBJ,OACnDsB,QAAMC,IAAI,uBAAqBnB,QAAiBJ,MAAU,IAE7DwB,OAAM,EAACpB,SAAEA,EAAQJ,MAAEA,MAClBN,EAAA0B,OAAOK,QAAQ,sBAAoBrB,QAAiBJ,OAClDsB,QAAMC,IAAI,sBAAoBnB,QAAeJ,MAAU,IAG7Dc,GAA0BG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name = \"delay\"]'),\n  amount: document.querySelector('input[name = \"amount\"]'),\n  step: document.querySelector('input[name = \"step\"]'),\n};\n\nrefs.form.addEventListener('submit', startNewPromise);\n\nfunction startNewPromise(e) {\n  e.preventDefault();\n  let inputDeley = Number(refs.delay.value);\n  const inputStep = Number(refs.step.value);\n\n  for (let i = 1; i <= Number(refs.amount.value); i++) {\n    createPromise(i, inputDeley)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    inputDeley = inputDeley + inputStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","amount","step","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","inputDeley","Number","value","inputStep","i","then","Notify","success","console","log","catch","failure"],"version":3,"file":"03-promises.7151f9a5.js.map"}